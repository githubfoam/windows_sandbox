
name: "Chocolatey CI workflow"

on:
  push:
    branches: [ feature_win ]
  # pull_request:
  #   branches: [ githubactions_powershell ]


jobs:

# https://github.com/google/grr/blob/master/appveyor/windows_templates/install_for_build.bat
  windows-latest:
    name: "GRR Rapid Response: remote live forensics for incident response  windows-latest Microsoft Windows Server 2019 Datacenter "  
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: "Close/reopen your shell to see the changes" 
      run: |
          echo Installing GRR dependencies
          mkdir C:\grr_deps || echo "Failed to create C:\grr_deps" && exit /b 1
      # shell: pwsh        
    # - name: "Running osquery using Powershell" #https://osquery.readthedocs.io/en/stable/installation/install-windows/#running-osquery
    #   run: Start-Service osqueryd
    #   shell: pwsh 

    - name: "check if server is virtual"
      run: Systeminfo | findstr /i model   
    - name: "check the PROCESSOR_ARCHITECTURE environment variable.64-bit systems will say AMD64 and 32-bit systems should say x86"
      run: wmic OS get OSArchitecture     
    - name: "osfingerprinting"
      run: systeminfo | more  
    - name: "display all processes, executable path"
      run: wmic process list full         
    - name: "list of running services"
      run: tasklist         
    - name: "list of all processes along with their corresponding PID, and services that are tied to them"
      run: tasklist /svc  
    - name: "look for unusual services"
      run: net start                       
    - name: "query unusual services"
      run: sc query 

  windows-latest-cmd:
    name: "windows-latest Microsoft Windows Server 2019 Datacenter cmd"  
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: "install Chocolatey GUI" # https://github.com/chocolatey/ChocolateyGUI
      run: choco install ChocolateyGUI     
    - name: "install the latest pre-release version of Chocolatey GUI" # https://github.com/chocolatey/ChocolateyGUI
      run: choco install chocolateygui --source https://www.myget.org/F/chocolateygui/ --pre       
    - name: "install osquery" #https://chocolatey.org/packages/osquery/
      run: choco install osquery  
    - name: "Close/reopen your shell to see the changes" 
      run: |
          refreshenv
          sc.exe start osqueryd
      shell: cmd         
    # - name: "Running osquery using cmd.exe" #https://osquery.readthedocs.io/en/stable/installation/install-windows/#running-osquery
    #   run: sc.exe start osqueryd
    #   shell: cmd               
    - name: "check if server is virtual"
      run: Systeminfo | findstr /i model   
    - name: "check the PROCESSOR_ARCHITECTURE environment variable.64-bit systems will say AMD64 and 32-bit systems should say x86"
      run: wmic OS get OSArchitecture     
    - name: "osfingerprinting"
      run: systeminfo | more  
    - name: "display all processes, executable path"
      run: wmic process list full         
    - name: "list of running services"
      run: tasklist         
    - name: "list of all processes along with their corresponding PID, and services that are tied to them"
      run: tasklist /svc  
    - name: "look for unusual services"
      run: net start                       
    - name: "query unusual services"
      run: sc query  

  windows-latest-pwsh-choco:
    name: "windows-latest Microsoft Windows Server 2019 Datacenter pwsh"  
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: "install Chocolatey GUI" # https://github.com/chocolatey/ChocolateyGUI
      run: choco install ChocolateyGUI     
    - name: "install the latest pre-release version of Chocolatey GUI" # https://github.com/chocolatey/ChocolateyGUI
      run: choco install chocolateygui --source https://www.myget.org/F/chocolateygui/ --pre       
    - name: "install osquery" #https://chocolatey.org/packages/osquery/
      run: choco install osquery   
    - name: "Close/reopen your shell to see the changes" 
      run: |
          refreshenv
          Start-Service osqueryd
      shell: pwsh        
    # - name: "Running osquery using Powershell" #https://osquery.readthedocs.io/en/stable/installation/install-windows/#running-osquery
    #   run: Start-Service osqueryd
    #   shell: pwsh               
    - name: "check if server is virtual"
      run: Systeminfo | findstr /i model   
    - name: "check the PROCESSOR_ARCHITECTURE environment variable.64-bit systems will say AMD64 and 32-bit systems should say x86"
      run: wmic OS get OSArchitecture     
    - name: "osfingerprinting"
      run: systeminfo | more  
    - name: "display all processes, executable path"
      run: wmic process list full         
    - name: "list of running services"
      run: tasklist         
    - name: "list of all processes along with their corresponding PID, and services that are tied to them"
      run: tasklist /svc  
    - name: "look for unusual services"
      run: net start                       
    - name: "query unusual services"
      run: sc query 

  windows-latest-pwsh-osquery:
    name: "windows-latest Microsoft Windows Server 2019 Datacenter pwsh"  
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: "install Chocolatey GUI" # https://github.com/chocolatey/ChocolateyGUI
      run: choco install ChocolateyGUI     
    - name: "install the latest pre-release version of Chocolatey GUI" # https://github.com/chocolatey/ChocolateyGUI
      run: choco install chocolateygui --source https://www.myget.org/F/chocolateygui/ --pre       
    - name: "install osquery" #https://chocolatey.org/packages/osquery/
      run: choco install osquery   
    - name: "Close/reopen your shell to see the changes" 
      run: |
          refreshenv
          Start-Service osqueryd
      shell: pwsh        
    # - name: "Running osquery using Powershell" #https://osquery.readthedocs.io/en/stable/installation/install-windows/#running-osquery
    #   run: Start-Service osqueryd
    #   shell: pwsh               
    - name: "check if server is virtual"
      run: Systeminfo | findstr /i model   
    - name: "check the PROCESSOR_ARCHITECTURE environment variable.64-bit systems will say AMD64 and 32-bit systems should say x86"
      run: wmic OS get OSArchitecture     
    - name: "osfingerprinting"
      run: systeminfo | more  
    - name: "display all processes, executable path"
      run: wmic process list full         
    - name: "list of running services"
      run: tasklist         
    - name: "list of all processes along with their corresponding PID, and services that are tied to them"
      run: tasklist /svc  
    - name: "look for unusual services"
      run: net start                       
    - name: "query unusual services"
      run: sc query 

  windows-latest-pwsh:
    name: "windows-latest Microsoft Windows Server 2019 Datacenter pwsh"  
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: "install Chocolatey GUI" # https://github.com/chocolatey/ChocolateyGUI
      run: choco install ChocolateyGUI     
    - name: "install the latest pre-release version of Chocolatey GUI" # https://github.com/chocolatey/ChocolateyGUI
      run: choco install chocolateygui --source https://www.myget.org/F/chocolateygui/ --pre       
    - name: "install osquery" #https://chocolatey.org/packages/osquery/
      run: choco install osquery   
    - name: "Close/reopen your shell to see the changes" 
      run: |
          refreshenv
          Start-Service osqueryd
      shell: pwsh        
    # - name: "Running osquery using Powershell" #https://osquery.readthedocs.io/en/stable/installation/install-windows/#running-osquery
    #   run: Start-Service osqueryd
    #   shell: pwsh               
    - name: "check if server is virtual"
      run: Systeminfo | findstr /i model   
    - name: "check the PROCESSOR_ARCHITECTURE environment variable.64-bit systems will say AMD64 and 32-bit systems should say x86"
      run: wmic OS get OSArchitecture     
    - name: "osfingerprinting"
      run: systeminfo | more  
    - name: "display all processes, executable path"
      run: wmic process list full         
    - name: "list of running services"
      run: tasklist         
    - name: "list of all processes along with their corresponding PID, and services that are tied to them"
      run: tasklist /svc  
    - name: "look for unusual services"
      run: net start                       
    - name: "query unusual services"
      run: sc query 
      
  windows-2016-cmd:
    name: "Microsoft Windows Server 2016 Datacenter cmd"
    runs-on: windows-2016
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: "check if server is virtual"
      run: Systeminfo | findstr /i model   
    - name: "check the PROCESSOR_ARCHITECTURE environment variable.64-bit systems will say AMD64 and 32-bit systems should say x86"
      run: wmic OS get OSArchitecture     
    - name: "osfingerprinting"
      run: systeminfo | more  
    - name: "display all processes, executable path"
      run: wmic process list full         
    - name: "list of running services"
      run: tasklist         
    - name: "list of all processes along with their corresponding PID, and services that are tied to them"
      run: tasklist /svc  
    - name: "look for unusual services"
      run: net start                       
    - name: "query unusual services"
      run: sc query      

  windows-2016-pwsh:
    name: "Microsoft Windows Server 2016 Datacenter pwsh"
    runs-on: windows-2016
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: "check if server is virtual"
      run: Systeminfo | findstr /i model   
    - name: "check the PROCESSOR_ARCHITECTURE environment variable.64-bit systems will say AMD64 and 32-bit systems should say x86"
      run: wmic OS get OSArchitecture     
    - name: "osfingerprinting"
      run: systeminfo | more  
    - name: "display all processes, executable path"
      run: wmic process list full         
    - name: "list of running services"
      run: tasklist         
    - name: "list of all processes along with their corresponding PID, and services that are tied to them"
      run: tasklist /svc  
    - name: "look for unusual services"
      run: net start                       
    - name: "query unusual services"
      run: sc query        