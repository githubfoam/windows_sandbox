

name: osmatrix


on:
  push:
    branches: [ feature_githubactions ]
  # pull_request:
  #   branches: [ githubactions_powershell ]


jobs:

# https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-powershell
  pester-test:
    name: "Test PowerShell on Ubuntu"
    runs-on: ubuntu-latest
    steps:
    - name: "Check out repository code"
      uses: actions/checkout@v2
    # - name: "Perform a Pester test from the command-line"
    #   shell: pwsh
    #   run: Test-Path resultsfile.log | Should -Be $true
    - name: "Perform a Pester test from the Tests.ps1 file"
      shell: pwsh
      run: |
        Invoke-Pester Unit.Tests.ps1 -Passthru

# https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-powershell#packaging-workflow-data-as-artifacts
  upload-pester-results:
    name: "Run Pester and upload results"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: "Test with Pester"
      shell: pwsh
      run: Invoke-Pester Unit.Tests.ps1 -Passthru | Export-CliXml -Path Unit.Tests.xml
    - name: "Upload test results"
      uses: actions/upload-artifact@v2
      with:
        name: ubuntu-Unit-Tests
        path: Unit.Tests.xml
    if: ${{ always() }}

  install-dependencies:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install from PSGallery
      shell: pwsh
      run: |
        Set-PSRepository PSGallery -InstallationPolicy Trusted
        Install-Module SqlServer, PSScriptAnalyzer

# https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-powershell
  lint-with-PSScriptAnalyzer:
    name: "Install and run PSScriptAnalyzer"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: "Install PSScriptAnalyzer module"
      shell: pwsh
      run: |
            Set-PSRepository PSGallery -InstallationPolicy Trusted
            Install-Module PSScriptAnalyzer -ErrorAction Stop
    - name: "Lint with PSScriptAnalyzer"
      shell: pwsh
      run: |
            Invoke-ScriptAnalyzer -Path *.ps1 -Recurse -Outvariable issues
            $errors   = $issues.Where({$_.Severity -eq 'Error'})
            $warnings = $issues.Where({$_.Severity -eq 'Warning'})
            if ($errors) {
                Write-Error "There were $($errors.Count) errors and $($warnings.Count) warnings total." -ErrorAction Stop
            } else {
                Write-Output "There were $($errors.Count) errors and $($warnings.Count) warnings total."
            }

# https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-nodejs
  windows-node-js:
    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [8.x, 10.x, 12.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: "osfingerprinting"
      run: systeminfo | more          
    - run: npm install
    # - run: npm run build --if-present #npm ERR! enoent This is related to npm not being able to find a file.
    # - run: npm test
      env:
        CI: true



  windows:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: "check if server is virtual"
      run: Systeminfo | findstr /i model   
    - name: "check the PROCESSOR_ARCHITECTURE environment variable.64-bit systems will say AMD64 and 32-bit systems should say x86"
      run: wmic OS get OSArchitecture     
    - name: "osfingerprinting"
      run: systeminfo | more  
    - name: "display all processes, executable path"
      run: wmic process list full         
    - name: "list of running services"
      run: tasklist         
    - name: "list of all processes along with their corresponding PID, and services that are tied to them"
      run: tasklist /svc  
    - name: "look for unusual services"
      run: net start                       
    - name: "query unusual services"
      run: sc query  

