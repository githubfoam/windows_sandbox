name: "R CI workflow"

on:
  push:
    # branches: [ $default-branch ]
    branches: [ feature_githubactions ]
  # pull_request:
  #   branches: [ $default-branch ]

jobs:
  
  build-r-job:
    runs-on: macos-latest
    strategy:
      matrix:
        r-version: [3.5, 3.6]
    steps:
      - uses: actions/checkout@v2
      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@ffe45a39586f073cc2e9af79c4ba563b657dc6e3
        with:
          r-version: ${{ matrix.r-version }}
      - name: Install dependencies
        run: |
          install.packages(c("remotes", "rcmdcheck"))
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}
      - name: Check
        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error")
        shell: Rscript {0}

# # https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-java-with-ant
#   build-windows-job:
#     name: "Set up JDK 1.8 on windows-latest Microsoft Windows Server 2019 Datacenter"
#     runs-on: windows-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up JDK 1.8
#       uses: actions/setup-java@v1
#       with:
#         java-version: 1.8
#         architecture: x64
#     - name: "Build with Ant"
#       run: ant -noinput -buildfile build.xml    
#     - name: "Run the Ant jar target"
#       run: ant -noinput -buildfile build-ci.xml jar

# # https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-java-with-ant
#   build-macos-job:
#     name: "Set up JDK 1.8 on macos-latest 10.15.7"
#     runs-on: macos-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up JDK 1.8
#       uses: actions/setup-java@v1
#       with:
#         java-version: 1.8
#         architecture: x64        
#     - name: "Build with Ant"
#       run: ant -noinput -buildfile build.xml     
#     - name: "Run the Ant jar target"
#       run: ant -noinput -buildfile build-ci.xml jar       

# # https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-java-with-gradle
#   build-linux-packing-job:
#     name: "Caching dependencies on ubuntu-18.04"
#     runs-on: ubuntu-latest #ubuntu-18.04
#     steps:
#     - uses: actions/checkout@v2
#     - name: "Set up JDK 1.8"
#       uses: actions/setup-java@v1
#       with:
#         java-version: 1.8
#         architecture: x64  
#     - run: ant -noinput -buildfile build.xml
#     - uses: actions/upload-artifact@v2
#       with:
#         name: "Package"
#         path: build/jar

# # # https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-python#using-a-specific-python-version
#   build-ant-os-matrix:
#     name: "OS matrix excluding a java version"
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [ubuntu-latest, macos-latest, windows-latest]
#         # https://github.com/actions/setup-java
#         # test against latest update of each major Java version, as well as specific updates of LTS versions:
#         # java: [ 1.6, 6.0.83, 7, 7.0.181, 8, 8.0.192, 9.0.x, 10, 11.0.x, 11.0.3, 12, 13 ]
#         java: [ 11.0.3, 12, 13 ]
#         # exclude:
#         #   - os: macos-latest
#         #     python-version: 3.6
#         #   - os: windows-latest
#         #     python-version: 3.6
#     steps:
#       - uses: actions/checkout@v2
#       - name: "Setup java"
#         uses: actions/setup-java@v1
#         with:
#           java-version: ${{ matrix.java }}
#       # - name: "Setup java"
#       #   run: java -cp java HelloWorldApp        
