
name: "windows CI workflow"

on:
  push:
    branches: [ feature_win ]


jobs:

  windows-latest-pwsh-FireFox:
    name: "windows-latest Microsoft Windows Server 2019 Datacenter pwsh"  
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: "silent install firefox" 
      run: .\scripts\Install_FireFox.ps1
      shell: pwsh    
    - name: "test verbose" 
      run: .\scripts\Test_Verbose.ps1
      shell: pwsh    
    - name: "windows version" 
      run: .\scripts\Windows_Version.ps1
      shell: pwsh               
    # - name: "Close/reopen your shell to see the changes" 
    #   run: |
    #       refreshenv
    #       sc.exe start osqueryd
    #   shell: cmd 

  # windows-latest:
  #   name: "windows-latest Microsoft Windows Server 2019 Datacenter"  
  #   runs-on: windows-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v1
  #   - name: "check if server is virtual"
  #     run: Systeminfo | findstr /i model   
  #   - name: "check the PROCESSOR_ARCHITECTURE environment variable.64-bit systems will say AMD64 and 32-bit systems should say x86"
  #     run: wmic OS get OSArchitecture     
  #   - name: "osfingerprinting"
  #     run: systeminfo | more  
  #   - name: "display all processes, executable path"
  #     run: wmic process list full         
  #   - name: "list of running services"
  #     run: tasklist         
  #   - name: "list of all processes along with their corresponding PID, and services that are tied to them"
  #     run: tasklist /svc  
  #   - name: "look for unusual services"
  #     run: net start                       
  #   - name: "query unusual services"
  #     run: sc query  

  # windows-2019: 
  #   name: "Microsoft Windows Server 2019 Datacenter"
  #   runs-on: windows-2019
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v1
  #   - name: "check if server is virtual"
  #     run: Systeminfo | findstr /i model   
  #   - name: "check the PROCESSOR_ARCHITECTURE environment variable.64-bit systems will say AMD64 and 32-bit systems should say x86"
  #     run: wmic OS get OSArchitecture     
  #   - name: "osfingerprinting"
  #     run: systeminfo | more  
  #   - name: "display all processes, executable path"
  #     run: wmic process list full         
  #   - name: "list of running services"
  #     run: tasklist         
  #   - name: "list of all processes along with their corresponding PID, and services that are tied to them"
  #     run: tasklist /svc  
  #   - name: "look for unusual services"
  #     run: net start                       
  #   - name: "query unusual services"
  #     run: sc query 

  # windows-2019-shells: 
  #   name: "Microsoft Windows Server 2019 Datacenter shells"
  #   runs-on: windows-2019
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v1
  #   - name: "check if server is virtual"
  #     run: Systeminfo | findstr /i model   
  #   - name: "check the PROCESSOR_ARCHITECTURE environment variable.64-bit systems will say AMD64 and 32-bit systems should say x86"
  #     run: wmic OS get OSArchitecture     
  #   - name: "osfingerprinting"
  #     run: systeminfo | more  
  #   - name: "display all processes, executable path"
  #     run: wmic process list full         
  #   - name: "list of running services"
  #     run: tasklist         
  #   - name: "list of all processes along with their corresponding PID, and services that are tied to them"
  #     run: tasklist /svc  
  #   - name: "look for unusual services"
  #     run: net start                       
  #   - name: "query unusual services"
  #     run: sc query 
  #   - name: "Display the path" #Example running a script using bash
  #     run: echo $PATH
  #     shell: bash      
  #   - name: "Display the path" #Example running a script using Windows cmd
  #     run: echo %PATH%
  #     shell: cmd     
  #   - name: "Display the path" #Example running a script using PowerShell Core
  #     run: echo ${env:PATH}
  #     shell: pwsh  
  #   - name: "Display the path" #Example running a python script
  #     run: |
  #         import os
  #         print(os.environ['PATH'])
  #     shell: python  

  # windows-2016:
  #   name: "Microsoft Windows Server 2016 Datacenter"
  #   runs-on: windows-2016
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v1
  #   - name: "check if server is virtual"
  #     run: Systeminfo | findstr /i model   
  #   - name: "check the PROCESSOR_ARCHITECTURE environment variable.64-bit systems will say AMD64 and 32-bit systems should say x86"
  #     run: wmic OS get OSArchitecture     
  #   - name: "osfingerprinting"
  #     run: systeminfo | more  
  #   - name: "display all processes, executable path"
  #     run: wmic process list full         
  #   - name: "list of running services"
  #     run: tasklist         
  #   - name: "list of all processes along with their corresponding PID, and services that are tied to them"
  #     run: tasklist /svc  
  #   - name: "look for unusual services"
  #     run: net start                       
  #   - name: "query unusual services"
  #     run: sc query      

  # windows-2016-shells:
  #   name: "Microsoft Windows Server 2016 Datacenter shells"
  #   runs-on: windows-2016
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v1
  #   - name: "check if server is virtual"
  #     run: Systeminfo | findstr /i model   
  #   - name: "check the PROCESSOR_ARCHITECTURE environment variable.64-bit systems will say AMD64 and 32-bit systems should say x86"
  #     run: wmic OS get OSArchitecture     
  #   - name: "osfingerprinting"
  #     run: systeminfo | more  
  #   - name: "display all processes, executable path"
  #     run: wmic process list full         
  #   - name: "list of running services"
  #     run: tasklist         
  #   - name: "list of all processes along with their corresponding PID, and services that are tied to them"
  #     run: tasklist /svc  
  #   - name: "look for unusual services"
  #     run: net start                       
  #   - name: "query unusual services"
  #     run: sc query  
  #   - name: "Display the path" #Example running a script using bash
  #     run: echo $PATH
  #     shell: bash      
  #   - name: "Display the path" #Example running a script using Windows cmd
  #     run: echo %PATH%
  #     shell: cmd     
  #   - name: "Display the path" #Example running a script using PowerShell Core
  #     run: echo ${env:PATH}
  #     shell: pwsh  
  #   - name: "Display the path" #Example running a python script
  #     run: |
  #         import os
  #         print(os.environ['PATH'])
  #     shell: python       