name: "gradle CI workflow"

on:
  push:
    # branches: [ $default-branch ]
    branches: [ feature_githubactions ]
  # pull_request:
  #   branches: [ $default-branch ]

jobs:
  
# https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-java-with-gradle  
  build-linux-job:
    name: "Specifying the JVM version and architecture on ubuntu-18.04"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    # - name: "Set up JDK 1.8"
    #   uses: actions/setup-java@v1
    #   with:
    #     java-version: 1.8
    - name: "Set up JDK 9.0.4 for x64"
      uses: actions/setup-java@v1
      with:
          java-version: '9.0.4'
          architecture: x64        
    # - name: Build with Maven
    #   run: mvn --batch-mode --update-snapshots verify
    # - name: Build with Maven
    #   run: mvn -B package --file pom.xml
    - name: "Grant execute permission for gradlew"
      run: chmod +x gradlew
    - name: "Build with Gradle"
      run: ./gradlew build    
    - name: "Run the Gradle package task"
      run: ./gradlew -b ci.gradle package

# https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-java-with-gradle
  build-windows-job:
    name: "Set up JDK 1.8 on windows-latest Microsoft Windows Server 2019 Datacenter"
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        architecture: x64
    - name: "Grant execute permission for gradlew"
      run: chmod +x gradlew
    - name: "Build with Gradle"
      run: ./gradlew build    
    - name: "Run the Gradle package task"
      run: ./gradlew -b ci.gradle package      

# https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-java-with-gradle
  build-macos-job:
    name: "Set up JDK 1.8 on macos-latest 10.15.7"
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        architecture: x64        
    - name: "Grant execute permission for gradlew"
      run: chmod +x gradlew
    - name: "Build with Gradle"
      run: ./gradlew build    
    - name: "Run the Gradle package task"
      run: ./gradlew -b ci.gradle package      

# https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-java-with-gradle
  build-linux-caching-job:
    name: "Caching dependencies on ubuntu-18.04"
    runs-on: ubuntu-latest #ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        architecture: x64  
    - name: "Cache Gradle packages"
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
    - name: "Grant execute permission for gradlew"
      run: chmod +x gradlew        
    - name: "Build with Gradle"
      run: ./gradlew build
    - name: "Run the Gradle package task"
      run: ./gradlew -b ci.gradle package        

# https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-python#using-a-specific-python-version
  build-gradle-os-matrix:
    name: "OS matrix excluding a java version"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        # https://github.com/actions/setup-java
        # test against latest update of each major Java version, as well as specific updates of LTS versions:
        # java: [ 1.6, 6.0.83, 7, 7.0.181, 8, 8.0.192, 9.0.x, 10, 11.0.x, 11.0.3, 12, 13 ]
        java: [ 11.0.3, 12, 13 ]
        # python-version: [2.7, 3.6, 3.7, 3.8, pypy2, pypy3]
        # exclude:
        #   - os: macos-latest
        #     python-version: 3.6
        #   - os: windows-latest
        #     python-version: 3.6
    steps:
      - uses: actions/checkout@v2
      - name: "Setup java"
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: "Verify java version"
        run: java -version 
      - name: "Verify gradle version"
        run: gradle -v                     
      # - name: "Setup java"
      #   run: java -cp java HelloWorldApp   
         
