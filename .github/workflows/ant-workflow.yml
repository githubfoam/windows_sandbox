name: "ant CI workflow"

on:
  push:
    # branches: [ $default-branch ]
    branches: [ feature_githubactions ]
  # pull_request:
  #   branches: [ $default-branch ]

jobs:
  
# https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-java-with-ant
  build-linux-job:
    name: "Specifying the JVM version and architecture on ubuntu-18.04"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: "Set up JDK 9.0.4 for x64"
      uses: actions/setup-java@v1
      with:
          java-version: '9.0.4'
          architecture: x64        
    - name: "Build with Ant"
      run: ant -noinput -buildfile build.xml
    - name: "Run the Ant jar target"
      run: ant -noinput -buildfile build-ci.xml jar


# https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-java-with-ant
  build-windows-job:
    name: "Set up JDK 1.8 on windows-latest Microsoft Windows Server 2019 Datacenter"
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        architecture: x64
    - name: "Build with Ant"
      run: ant -noinput -buildfile build.xml    
    - name: "Run the Ant jar target"
      run: ant -noinput -buildfile build-ci.xml jar

# https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-java-with-ant
  build-macos-job:
    name: "Set up JDK 1.8 on macos-latest 10.15.7"
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        architecture: x64        
    - name: "Build with Ant"
      run: ant -noinput -buildfile build.xml     
    - name: "Run the Ant jar target"
      run: ant -noinput -buildfile build-ci.xml jar       

# https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-java-with-gradle
  build-linux-packing-job:
    name: "Caching dependencies on ubuntu-18.04"
    runs-on: ubuntu-latest #ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: "Set up JDK 1.8"
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        architecture: x64  
    - run: ant -noinput -buildfile build.xml
    - uses: actions/upload-artifact@v2
      with:
        name: "Package"
        path: build/jar

# # https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-python#using-a-specific-python-version
#   build-maven-os-matrix:
#     name: "OS matrix excluding a java version"
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [ubuntu-latest, macos-latest, windows-latest]
#         # https://github.com/actions/setup-java
#         # test against latest update of each major Java version, as well as specific updates of LTS versions:
#         java: [ 1.6, 6.0.83, 7, 7.0.181, 8, 8.0.192, 9.0.x, 10, 11.0.x, 11.0.3, 12, 13 ]
#         # java: [ 11.0.3, 12, 13 ]
#         # python-version: [2.7, 3.6, 3.7, 3.8, pypy2, pypy3]
#         # exclude:
#         #   - os: macos-latest
#         #     python-version: 3.6
#         #   - os: windows-latest
#         #     python-version: 3.6
#     steps:
#       - uses: actions/checkout@v2
#       - name: "Setup java"
#         uses: actions/setup-java@v1
#         with:
#           java-version: ${{ matrix.java }}
#       # - name: "Setup java"
#       #   run: java -cp java HelloWorldApp        

# # https://github.com/actions/setup-java
#   publish-apache-maven-job:
#     name: "Publishing using Apache Maven"
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up JDK 1.8
#       uses: actions/setup-java@v1
#       with:
#         java-version: 1.8
#     - name: "Build with Maven"
#       run: mvn -B package --file pom.xml
#     - name: "Publish to GitHub Packages Apache Maven"
#       run: mvn deploy
#       env:
#         GITHUB_TOKEN: ${{ github.token }} # GITHUB_TOKEN is the default env for the password
#     - name: "Set up Apache Maven Central"
#       uses: actions/setup-java@v1
#       with: # running setup-java again overwrites the settings.xml
#         java-version: 1.8
#         server-id: maven # Value of the distributionManagement/repository/id field of the pom.xml
#         server-username: MAVEN_USERNAME # env variable for username in deploy
#         server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
#         gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
#         gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase
#     - name: "Publish to Apache Maven Central"
#       run: mvn deploy
#       env:
#         MAVEN_USERNAME: maven_username123
#         MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
#         MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}      