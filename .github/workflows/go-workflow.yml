

name: "Go ubuntu CI workflow"


on:
  push:
    branches: [ feature_githubactions ]
  # pull_request:
  #   branches: [ githubactions_powershell ]


jobs:

  ubuntu-job:
    name: "ubuntu-latest"
    runs-on: ubuntu-latest
    steps:
    - name: "Set up Go 1.x"
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
    - name: "Check out code into the Go module directory"
      uses: actions/checkout@v2
    - name: "Get dependencies"
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: "Build"
      run: go build -v ./...
    - name: "Test"
      run: go test -v ./...
    - name: "os fingerprinting"
      run: hostnamectl status    

  ubuntu-1604-job:
    name: "ubuntu-16.04"
    runs-on: ubuntu-16.04
    steps:
    - name: "Set up Go 1.x"
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
    - name: "Check out code into the Go module directory"
      uses: actions/checkout@v2
    - name: "Get dependencies"
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: "Build"
      run: go build -v ./...
    - name: "Test"
      run: go test -v ./...
    - name: "os fingerprinting"
      run: hostnamectl status  

  ubuntu-1804-job:
    name: "ubuntu-18.04"
    runs-on: ubuntu-18.04
    steps:
    - name: "Set up Go 1.x"
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
    - name: "Check out code into the Go module directory"
      uses: actions/checkout@v2
    - name: "Get dependencies"
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: "Build"
      run: go build -v ./...
    - name: "Test"
      run: go test -v ./...
    - name: "os fingerprinting"
      run: hostnamectl status  



  ubuntu-2004-job:
    name: "ubuntu-20.04"
    runs-on: ubuntu-20.04
    steps:
    - name: "Set up Go 1.x"
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
    - name: "Check out code into the Go module directory"
      uses: actions/checkout@v2
    - name: "Get dependencies"
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: "Build"
      run: go build -v ./...
    - name: "Test"
      run: go test -v ./...
    - name: "os fingerprinting"
      run: hostnamectl status  
